% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/generate_data.R
\name{generate_phenos}
\alias{generate_phenos}
\title{Generate phenotypic data with prespecified block-wise correlation structure.}
\usage{
generate_phenos(n, d, var_err, prob = NULL, family = "gaussian",
  cor_type = NULL, vec_rho = NULL, n_cpus = 1, user_seed = NULL)
}
\arguments{
\item{n}{Number of observations.}

\item{d}{Number of phenos.}

\item{var_err}{If \code{family = "gaussian"}, vector of length 1 or d
containing the variances of the Gaussian distributions used to generate the
phenotypes. If of length 1, the value is repeated d times. Must be
\code{NULL} if \code{family = "binomial"}.}

\item{prob}{If \code{family = "binomial"}, vector of length 1 or d
containing the probability parameters for the binomial distributions used
to generate the phenotypes. If of length 1, the value is repeated d times.
Must be \code{NULL} if \code{family = "gaussian"}.}

\item{family}{Outcome type. Must be either "\code{gaussian}" or
"\code{binomial}" for binary outcomes.}

\item{cor_type}{String describing the type of dependence structure. The
phenotypes can \code{autocorrelated}, \code{equicorrelated}. Set to
\code{NULL} for independent phenotypes.}

\item{vec_rho}{Vector of correlation coefficients. Its length determines the
number of blocks of correlated phenotypes. Must be smaller than d. Set to
\code{NULL} if independent phenotypes.}

\item{n_cpus}{Number of CPUs used when simulating correlated phenotype blocks.
Ignored if independent phenotypes. Set to 1 for serial execution.}

\item{user_seed}{Seed set for reproducibility. Default is \code{NULL}, no
seed set.}
}
\value{
An object of class "\code{sim_phenos}".
 \item{phenos}{Matrix containing the generated phenotypic data.}
 \item{var_err}{Vector containing the sample phenotypic variances.}
 \item{ind_bl}{List of length given by the number of blocks, containing the
               indices of the phenotypes in each block. Is \code{NULL} if
               \code{cor_type} is \code{NULL}.}
}
\description{
This function generates Gaussian phenotypes with specific block correlation
structure.
}
\examples{
user_seed <- 123; set.seed(user_seed)
n <- 500; d <- 10000
cor_type <- "equicorrelated"; vec_rho <- runif(100, min = 0.25, max = 0.95)

# Gaussian outcomes
var_err <- runif(d, min = 0.1, max = 0.4)
list_phenos <- generate_phenos(n, d, var_err, family = "gaussian",
                               cor_type = cor_type, vec_rho = vec_rho,
                               n_cpus = 2, user_seed = user_seed)

# Binary outcomes
prob <- runif(d, min = 0, max = 1)
list_phenos <- generate_phenos(n, d, var_err = NULL, prob = prob,
                               family = "binomial", cor_type = cor_type,
                               vec_rho = vec_rho, n_cpus = 2,
                               user_seed = user_seed)

}
\seealso{
\code{\link{generate_snps}}, \code{\link{replicate_real_snps}},
  \code{\link{replicate_real_phenos}}, \code{\link{generate_dependence}}
}

